plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

group = 'kr.co.fastcampus'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'junit:junit:4.12'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.h2database:h2'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    compileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

// jar를 만들어줌
jar { enabled = true }
// starter-web 때문에 스프링부트를 띄워서 뭘 하려함 그거 하지마 설정
bootJar { enabled = false }

// ./gradlew build 하면 테스트와 빌드가 전부 수행 됨
// ./gradlew assemble -> jar파일들이 만들어짐
// ./gradlew test      -> 전체 테스트 수행  -> 인텔리제이에서 하고싶으면 Edit Configuration -> Gradle -> 플젝 Eatgo, task: test
// ./check

// 캐시데이터 날리고 깔끔하게 테스트하려면 gradle 테스트 task에 clean test 입력
// gradle 테스트를 하고 싶으면 settings -> build tool -> gradle 세팅 -> build and run using: Gradle 로 설정,. Run tests using: Gradle 설정